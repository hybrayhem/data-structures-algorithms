@startuml

title __QUESTÄ°ON's Class Diagram__\n

  namespace question {
    class question.BinaryHeap {
        + BinaryHeap()
        + equals()
        + getData()
        + getLeftSubtree()
        + getRightSubtree()
        + hashCode()
        + isLeaf()
        + toString()
        # clone()
        # finalize()
    }
  }
  

  namespace question {
    class question.BinarySearchTree {
        - elements : ArrayList<E>
        + BinarySearchTree()
        + add()
        + contains()
        + remove()
    }
  }
  

  namespace question {
    class question.BinaryTree {
        # root : Node<E>
        + BinaryTree()
        + BinaryTree()
        + getData()
        + getLeftSubtree()
        + getRightSubtree()
        + isLeaf()
        {static} + readBinaryTree()
        + toString()
        # BinaryTree()
        - preOrderTraverse()
    }
  }
  

  namespace question {
    class question.BinaryTree.Node {
        # left : Node<E>
        # right : Node<E>
        + Node()
        + toString()
    }
  }
  

  namespace question {
    class question.Main {
        {static} + get_selection()
        {static} + main()
    }
  }
  

  namespace question {
    interface question.SearchTree {
        {abstract} + add()
        {abstract} + contains()
        {abstract} + remove()
    }
  }
  

  question.BinaryHeap -up-|> question.BinaryTree
  question.BinarySearchTree .up.|> question.SearchTree
  question.BinarySearchTree -up-|> question.BinaryTree
  question.BinaryTree .up.|> Serializable
  question.BinaryTree +-down- question.BinaryTree.Node
  question.BinaryTree.Node .up.|> Serializable
  question.BinaryTree.Node o-- E : data


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
